const { Composer, Markup } = require("telegraf");
const composer = new Composer();

const ENGINEER = parseInt(process.env.ENGINEER_ID, 10); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ

// –ú–∞—Å—Å–∏–≤ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –∫–æ–º–∞–Ω–¥,
const adminCommands = [
  { command: "/user", description: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", category: 'stat' },
  { command: "/last5", description: "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", category: 'stat' },
  { command: "/last10", description: "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", category: 'stat' },
  { command: "/add", description: "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —É—Å–ª—É–≥—É", category: 'service' },
  { command: "/list", description: "–°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥", category: 'service' },
  { command: "/delete", description: "–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —É—Å–ª—É–≥–∏", category: 'service' }
];

composer.command("commands", async (ctx) => {
  const id = ctx.from.id
  const username = ctx.message.from.username;
  if (id === ENGINEER || username === "all2now") {
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    const statsCommands = adminCommands.filter(cmd => cmd.category === 'stat');
    const quoteCommands = adminCommands.filter(cmd => cmd.category === 'service');
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ —Å—Ç—Ä–æ–∫–∏ 
    const statsCommandsText = statsCommands.map(cmd => `<b>${cmd.command}</b> - ${cmd.description}`).join('\n');
    const quoteCommandsText = quoteCommands.map(cmd => `<b>${cmd.command}</b> - ${cmd.description}`).join('\n');
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
    ctx.replyWithHTML(`<b>üõ† –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>\n\n<b>–£—Å–ª—É–≥–∏:</b>\n${quoteCommandsText}\n\n<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n ${statsCommandsText}`
    );
  } else {
    ctx.reply("–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.");
  }
});


module.exports = composer;
